---
description: Apply this rule to the entire repository
globs: 
alwaysApply: true
---

利用者からの依頼によりコーディングをする場合、下記のことを留意しながら行います。

## コーディング
- コードフォーマッターが導入されている場合はそれに従う
- 認知負荷を低く抑える工夫をする
    - 説明変数を使う (変数に一度代入することで、変数名によりコンテキストを補う)
    - 関数分割 (1関数あたりのコード行数を抑えることで見通しを良くする)
    - 早期リターンやmatch式の活用

## コメント
- コメントは「Why not（なぜそうしないのか）」や注意事項を残す際に利用する
- コメントは必要最小限に抑え、コードが自己説明的でない場合のみ使用する

## ログ出力
- 外部APIの呼び出しなど、責任境界にあたる部分では記録のためにinfoレベルのログ出力を行う

## ドキュメント
- 変更したコードに関連するドキュメント (README.md、JavaDoc等のコード内ドキュメントを含む) がある場合、忘れずに更新する
- 技術用語は初出時に説明を付け、以降は一貫した用語を使用する

## セキュリティ
- 機密データ（パスワード、APIキーなど）は必ず環境変数で管理する
-  ユーザー入力は必ずバリデーションを行い、SQLインジェクションやXSSを防ぐ

## パフォーマンス
- 利用するカラムにindexが適切に貼られているか注意し、必要なindexが足りない場合は追加する。
- キャッシュは有効期限を適切に設定し、必要なデータのみをキャッシュする
